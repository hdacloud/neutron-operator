#
# Check for:
#
# - 1 NeutronAPI CR
# - Deployment with 1 Pod for NeutronAPI CR
# - Neutron-internal Service
# - Neutron-public Service

apiVersion: neutron.openstack.org/v1beta1
kind: NeutronAPI
metadata:
  finalizers:
  - openstack.org/neutronapi
  name: neutron
spec:
  customServiceConfig: |
    [DEFAULT]
    debug = true
  databaseInstance: openstack
  databaseAccount: neutron
  passwordSelectors:
    service: NeutronPassword
  preserveJobs: false
  rabbitMqClusterName: rabbitmq
  replicas: 1
  secret: osp-secret
  serviceUser: neutron
status:
  databaseHostname: openstack.neutron-kuttl-tests.svc
  transportURLSecret: rabbitmq-transport-url-neutron-neutron-transport
  readyCount: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neutron
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      service: neutron
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: neutron
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - neutron
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - /bin/bash
        args:
        - -c
        - /usr/local/bin/kolla_start
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9696
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        name: neutron-api
        resources: {}
        securityContext:
          runAsUser: 42435
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      - command:
        - /usr/sbin/httpd
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9696
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        name: neutron-httpd
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 9696
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        securityContext:
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: neutron-neutron
      serviceAccountName: neutron-neutron
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
# the openshift annotations can't be checked through the deployment above
apiVersion: v1
kind: Pod
metadata:
  annotations:
    openshift.io/scc: anyuid
  labels:
    service: neutron
---
apiVersion: v1
kind: Service
metadata:
  labels:
    endpoint: internal
    service: neutron
  name: neutron-internal
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: neutron-internal
    port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    service: neutron
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    endpoint: public
    service: neutron
  name: neutron-public
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: neutron-public
    port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    service: neutron
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: keystone.openstack.org/v1beta1
kind: KeystoneEndpoint
metadata:
  name: neutron
  ownerReferences:
  - apiVersion: neutron.openstack.org/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: NeutronAPI
    name: neutron
---
# the actual addresses of the api endpoints are platform specific, so we can't rely on
# kuttl asserts to check them. This short script gathers the addresses and checks that
# the two endpoints are defined and their addresses follow the default pattern
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
commands:
  - script: |
      template='{{.spec.endpoints.internal}}{{":"}}{{.spec.endpoints.public}}{{"\n"}}'
      regex="http:\/\/neutron-internal.$NAMESPACE.*:http:\/\/neutron-public.$NAMESPACE.*"
      apiEndpoints=$(oc get -n $NAMESPACE KeystoneEndpoint neutron -o go-template="$template")
      matches=$(echo "$apiEndpoints" | sed -e "s?$regex??")
      if [[ -n "$matches" ]]; then
        exit 1
      fi

      # when using image digests the containerImage URLs are SHA's so we verify them with a script
      tupleTemplate='{{ range (index .spec.template.spec.containers 1).env }}{{ .name }}{{ "#" }}{{ .value}}{{"\n"}}{{ end }}'
      imageTuples=$(oc get -n openstack-operators deployment neutron-operator-controller-manager -o go-template="$tupleTemplate")
      # format of imageTuple is: RELATED_IMAGE_NEUTRON_<service>#<image URL with SHA> separated by newlines
      for ITEM in $(echo $imageTuples); do
        # it is an image
        if echo $ITEM | grep 'RELATED_IMAGE' &> /dev/null; then
          NAME=$(echo $ITEM | sed -e 's|^RELATED_IMAGE_NEUTRON_\([^_]*\)_.*|\1|')
          IMG_FROM_ENV=$(echo $ITEM | sed -e 's|^.*#\(.*\)|\1|')
          template='{{.spec.containerImage}}'
          case $NAME in
            API)
              SERVICE_IMAGE=$(oc get -n $NAMESPACE neutronapi neutron -o go-template="$template")
              ;;
          esac
          if [ "$SERVICE_IMAGE" != "$IMG_FROM_ENV" ]; then
            echo "$NAME image does not equal $VALUE"
            exit 1
          fi
        fi
      done

      exit 0
